{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAGA,MAAMC,EAASC,SAASC,cAAe,QACvCF,EAAOG,iBAAkB,SAOzB,SAAqBC,GACQ,UAAtBA,EAAMC,OAAOC,KAChBC,EAAQC,OAAOJ,EAAMC,OAAOI,OACI,SAAtBL,EAAMC,OAAOC,KACvBI,EAAOF,OAAOJ,EAAMC,OAAOI,OACI,WAAtBL,EAAMC,OAAOC,OACtBK,EAASH,OAAOJ,EAAMC,OAAOI,O,IAZjCT,EAAOG,iBAAkB,UA6BzB,SAAqBC,GACnBA,EAAMQ,iBACN,IAAM,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EACjCC,EAAeD,EAAGN,GACjBQ,MAAK,EAACC,SAAEA,EAAUC,MAAAC,MAEjBC,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBL,QAAiBE,MAAU,IAEzEI,OAAM,EAACN,SAAEA,EAAUC,MAAAM,MAElBJ,EAAArB,GAASsB,OAAOI,QAAQ,sBAAoBR,QAAeO,MAAU,IAEvEhB,GAAgBG,C,IAvCpB,IAAIH,EAAQ,EACRG,EAAO,EACPC,EAAS,EAYb,SAASG,EAAeE,EAAUS,GAChC,OAAO,IAAIC,SAAS,CAAEC,EAAKC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,aAAa,KACPH,EACFF,EAAK,C,SAAEX,EAAUC,MAAAQ,IAEjBG,EAAK,C,SAAEZ,EAAUC,MAAAQ,GAAS,GAE3BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\nconst flatpickr = require( \"flatpickr\" );\n\nconst formEl = document.querySelector( 'form' );\nformEl.addEventListener( 'input', checkInput );\nformEl.addEventListener( 'submit', submitForm );\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\n\nfunction checkInput( event ) {\n  if ( event.target.name === 'delay' ) {\n    delay = Number(event.target.value);\n  } else if ( event.target.name === 'step' ) {\n    step = Number(event.target.value);\n  } else if (event.target.name === 'amount' ) {\n    amount = Number(event.target.value);\n  }  \n}\n\nfunction createPromise( position, delay ) {\n  return new Promise( ( res, rej ) => {\n    const shouldResolve = Math.random() > 0.3;\n    setInterval( () => {\n      if (shouldResolve) {\n        res( { position, delay } )\n      } else {\n        rej( { position, delay } )\n      }  \n    }, delay)\n  } )\n}\n\nfunction submitForm( event ) {\n  event.preventDefault();\n  for ( let i = 1; i <= amount; i += 1 ) {\n    createPromise( i, delay )\n    .then(({ position, delay }) => {\n      // console.log( `✅ Fulfilled promise ${position} in ${delay}ms` );\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      // console.log( `❌ Rejected promise ${position} in ${delay}ms` );\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms` );\n    } );\n    delay = delay + step;\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","event","target","name","$47d4ff9957288465$var$delay","Number","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","preventDefault","i","$47d4ff9957288465$var$createPromise","then","position","delay","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","delay1","Promise","res","rej","shouldResolve","Math","random","setInterval"],"version":3,"file":"03-promises.cb672044.js.map"}